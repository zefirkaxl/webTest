@use "sass:math";
@import url("https://fonts.googleapis.com/css?family=Kumbh+Sans:300,regular,500,600,700");
@import url("https://fonts.googleapis.com/css?family=Rubik+Distressed:regular&display=swap");



@function toRem($num1, $num2: 16) {
  $rez: math.div($num1, $num2) + rem;
  @return $rez;
}

// Кольори
$mainColor: #fcfcfc; //Колір тексту

// Шрифту за замовчуванням
$fontFamily: "font-family: 'Kumbh Sans'";
$fontSize: toRem(16);

// Мінімална ширина екрана
$minWidth: 380;
// Максимальна ширина екрана
$maxWidth:  1920;
// Ширина контейнера
$maxWidthContainer: 1220;
// Падінг по сторонах контейнера
$containerPadding: 30;

$containerWidth: $maxWidthContainer + $containerPadding;
@function em($px, $current: 16) {
  $result: math.div($px, $current) + em;
  @return $result;
}
// Брейк-поїнти
$pc: em(
  $containerWidth
); // ПК, ноутбуки, деякі планшети у горизонтальному положенні
$tablet: em(991.98); // Планшети, деякі телефони в горизонтальному положенні
$mobile: em(768.98); // Телефони L
$mobileSmall: em(479.98); // Телефони S

@function toEm($num1, $num2: 16) {
  $rez: math.div($num1, $num2) + em;
  @return $rez;
}

// Адаптивна властивість (clamp)
@mixin adaptiveValue(
  $property,
  $startSize,
  $minSize,
  $keepSize: 0,
  $widthFrom: $containerWidth,
  $widthTo: $minWidth
) {
  @if ($startSize==0) {
    $startSize: 0.000001;
  }
  @if ($minSize==0) {
    $minSize: 0.000001;
  }

  // Для calc();
  $addSize: math.div($startSize - $minSize, 16);

  @if ($widthFrom == $containerWidth and $maxWidthContainer == 0) {
    $widthFrom: $maxWidth;
  }

  // Брейк-поїнти в EM
  $widthFromMedia: toEm($widthFrom);
  $widthToMedia: toEm($widthTo);

  // Формула плаваючого значення
  // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/
  $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));
  $yIntersection: -$widthTo * $slope + $minSize;
  @if ($yIntersection==0) {
    $yIntersection: 0.000001;
  }
  $flyValue: #{toRem($yIntersection)}" + " #{$slope * 100}vw;

  // Отримання значення властивості
  $propertyValue: #{"clamp(" toRem($minSize) "," $flyValue "," toRem($startSize)
    ")"};
  // Якщо негативні значення
  @if ($minSize > $startSize) {
    $propertyValue: #{"clamp("
      toRem($startSize)
      ","
      $flyValue
      ","
      toRem($minSize)
      ")"};
  }

  // Встановлюємо значення за замовчуванням
  @if $keepSize != 1 and $keepSize != 3 {
    @media (min-width: $widthFromMedia) {
      #{$property}: toRem($startSize);
    }
  }
  // Адаптуємо розмір у проміжку між зазначеними ширинами в'юпорту
  @media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {
    // Якщо підтримується clamp();
    @supports (#{$property}: $propertyValue) {
      #{$property}: $propertyValue;
    }
    // Якщо не підтримується clamp();
    @supports not (#{$property}: $propertyValue) {
      #{$property}: calc(
        #{toRem($minSize)} + #{$addSize} * (100vw - #{toRem($widthTo)}) / #{math.div(
            $widthFrom,
            16
          ) - math.div($widthTo, 16)}
      );
    }
  }
  @if $keepSize != 1 and $keepSize != 2 {
    @media (max-width: $widthToMedia) {
      #{$property}: toRem($minSize);
    }
  }
}
